/*
 * This file is generated by jOOQ.
 */
package org.shiloh.jooq.codegen.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.shiloh.jooq.codegen.tables.TSysDept;
import org.shiloh.jooq.codegen.tables.pojos.SysDeptPojo;
import org.shiloh.jooq.codegen.tables.records.SysDeptRecord;


/**
 * 系统部门信息表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysDeptDao extends DAOImpl<SysDeptRecord, SysDeptPojo, Long> {

    /**
     * Create a new SysDeptDao without any configuration
     */
    public SysDeptDao() {
        super(TSysDept.SYS_DEPT, SysDeptPojo.class);
    }

    /**
     * Create a new SysDeptDao with an attached configuration
     */
    public SysDeptDao(Configuration configuration) {
        super(TSysDept.SYS_DEPT, SysDeptPojo.class, configuration);
    }

    @Override
    public Long getId(SysDeptPojo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SysDeptPojo> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(TSysDept.SYS_DEPT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<SysDeptPojo> fetchById(Long... values) {
        return fetch(TSysDept.SYS_DEPT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public SysDeptPojo fetchOneById(Long value) {
        return fetchOne(TSysDept.SYS_DEPT.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SysDeptPojo> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(TSysDept.SYS_DEPT.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<SysDeptPojo> fetchByName(String... values) {
        return fetch(TSysDept.SYS_DEPT.NAME, values);
    }

    /**
     * Fetch records that have <code>tel BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SysDeptPojo> fetchRangeOfTel(String lowerInclusive, String upperInclusive) {
        return fetchRange(TSysDept.SYS_DEPT.TEL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tel IN (values)</code>
     */
    public List<SysDeptPojo> fetchByTel(String... values) {
        return fetch(TSysDept.SYS_DEPT.TEL, values);
    }
}
